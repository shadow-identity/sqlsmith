name: Release

on:
  push:
    branches: [main]
    paths:
      - 'packages/*/package.json'
      - 'package.json'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      core-changed: ${{ steps.changes.outputs.core }}
      cli-changed: ${{ steps.changes.outputs.cli }}
      vite-plugin-changed: ${{ steps.changes.outputs.vite-plugin }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for package.json changes
        id: changes
        run: |
          if git diff HEAD~1 HEAD --name-only | grep -q "packages/core/package.json"; then
            echo "core=true" >> $GITHUB_OUTPUT
          else
            echo "core=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff HEAD~1 HEAD --name-only | grep -q "packages/cli/package.json"; then
            echo "cli=true" >> $GITHUB_OUTPUT
          else
            echo "cli=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff HEAD~1 HEAD --name-only | grep -q "packages/vite-plugin/package.json"; then
            echo "vite-plugin=true" >> $GITHUB_OUTPUT
          else
            echo "vite-plugin=false" >> $GITHUB_OUTPUT
          fi

  test-and-build:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.core-changed == 'true' || needs.detect-changes.outputs.cli-changed == 'true' || needs.detect-changes.outputs.vite-plugin-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint code
        run: pnpm exec biome check

      - name: Run tests
        run: pnpm test

      - name: Build packages
        run: pnpm build

  publish-core:
    runs-on: ubuntu-latest  
    needs: [detect-changes, test-and-build]
    if: needs.detect-changes.outputs.core-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build core package
        run: pnpm --filter @sqlsmith/core build

      - name: Publish core package
        run: pnpm --filter @sqlsmith/core publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-cli:
    runs-on: ubuntu-latest
    needs: [detect-changes, test-and-build, publish-core]
    if: always() && needs.detect-changes.outputs.cli-changed == 'true' && (needs.publish-core.result == 'success' || needs.publish-core.result == 'skipped')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build CLI package
        run: pnpm --filter @sqlsmith/cli build

      - name: Publish CLI package
        run: pnpm --filter @sqlsmith/cli publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-vite-plugin:
    runs-on: ubuntu-latest
    needs: [detect-changes, test-and-build, publish-core]
    if: always() && needs.detect-changes.outputs.vite-plugin-changed == 'true' && (needs.publish-core.result == 'success' || needs.publish-core.result == 'skipped')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build vite-plugin package
        run: pnpm --filter @sqlsmith/vite-plugin build

      - name: Publish vite-plugin package
        run: pnpm --filter @sqlsmith/vite-plugin publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: [detect-changes, publish-core, publish-cli, publish-vite-plugin]
    if: always() && (needs.publish-core.result == 'success' || needs.publish-cli.result == 'success' || needs.publish-vite-plugin.result == 'success')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm  
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'

      - name: Get version info
        id: version
        run: |
          CORE_VERSION=$(node -p "require('./packages/core/package.json').version")
          CLI_VERSION=$(node -p "require('./packages/cli/package.json').version")
          VITE_VERSION=$(node -p "require('./packages/vite-plugin/package.json').version")
          
          echo "core=$CORE_VERSION" >> $GITHUB_OUTPUT
          echo "cli=$CLI_VERSION" >> $GITHUB_OUTPUT
          echo "vite=$VITE_VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.core }}
          release_name: Release v${{ steps.version.outputs.core }}
          body: |
            ## Published Packages
            
            - @sqlsmith/core@${{ steps.version.outputs.core }}
            - @sqlsmith/cli@${{ steps.version.outputs.cli }}  
            - @sqlsmith/vite-plugin@${{ steps.version.outputs.vite }}
          draft: false
          prerelease: false 